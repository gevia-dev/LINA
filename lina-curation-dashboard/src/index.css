@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* 
  === SISTEMA DE CORES DO PROJETO LINA ===
  
  Exemplo de uso:
  
  // Em vez de:
  style={{ backgroundColor: '#121212', color: '#E0E0E0' }}
  
  // Use:
  style={{ backgroundColor: 'var(--bg-primary)', color: 'var(--text-primary)' }}
  
  // Ou em CSS:
  .meu-componente {
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    color: var(--text-primary);
  }
  
  Benefícios:
  - Consistência visual em todo o projeto
  - Facilita mudanças de tema
  - Melhor manutenibilidade
  - Possibilita criação de temas alternativos
*/

:root {
  /* === CORES PRINCIPAIS === */
  --primary-green: #2BB24C;
  --primary-green-hover: #25A043;
  --primary-green-transparent: #2BB24C50;
  --primary-green-light: #2BB24C10;
  --primary-green-bg: #2BB24C33;
  --primary-green-selection: #2BB24C08;

  /* === BACKGROUNDS === */
  --bg-primary: #121212;        /* Background principal - preto escuro */
  --bg-secondary: #1E1E1E;      /* Background secundário - cards, painéis */
  --bg-tertiary: #2A2A2A;       /* Background terciário - elementos destacados */
  --bg-overlay: rgba(0, 0, 0, 0.15); /* Overlay translúcido */

  /* === BORDAS E DIVISORES === */
  --border-primary: #333333;    /* Bordas principais */
  --border-secondary: #666666;  /* Bordas de loading/disabled */

  /* === CORES DE TEXTO === */
  --text-primary: #E0E0E0;      /* Texto principal - branco acinzentado */
  --text-secondary: #A0A0A0;    /* Texto secundário - cinza médio */
  --text-white: #FFFFFF;        /* Branco puro */

  /* === CORES DE STATUS === */
  --status-error: #EF4444;      /* Vermelho - erro */
  --status-error-light: #ff6b6b; /* Vermelho claro - erro suave */
  --status-success: #10B981;    /* Verde - sucesso */
  --status-warning: #F59E0B;    /* Amarelo - warning */
  --status-info: #3B82F6;       /* Azul - informação */
  --status-neutral: #6B7280;    /* Cinza - neutro */

  /* === TRANSPARÊNCIAS PARA STATUS === */
  --status-success-bg: #10B98120;
  --status-error-bg: #EF444420;
  --status-warning-bg: #F59E0B20;
  --status-info-bg: #3B82F620;
  --status-neutral-bg: #6B728020;
}

body {
  background-color: var(--bg-primary);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Box-sizing global e esconder scrollbars */
* {
  box-sizing: border-box;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer e Edge */
}

*::-webkit-scrollbar {
  display: none; /* Chrome, Safari e Opera */
}

/* Para elementos com overflow específico */
.overflow-y-auto,
.overflow-auto,
.overflow-x-auto,
.overflow-y-scroll,
.overflow-scroll,
.overflow-x-scroll {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer e Edge */
}

.overflow-y-auto::-webkit-scrollbar,
.overflow-auto::-webkit-scrollbar,
.overflow-x-auto::-webkit-scrollbar,
.overflow-y-scroll::-webkit-scrollbar,
.overflow-scroll::-webkit-scrollbar,
.overflow-x-scroll::-webkit-scrollbar {
  display: none; /* Chrome, Safari e Opera */
}

/* === PADRÃO DE HEADERS === */
.header-standard {
  display: flex;
  align-items: center;
  height: 80px;
  padding: 24px;
  background-color: var(--bg-secondary);
  border-bottom: 1px solid var(--border-primary);
  flex-shrink: 0;
  width: 100%;
  min-width: 0;
  box-sizing: border-box;
}

/* Header para sidebar (sem padding extra) */
.header-sidebar {
  display: flex;
  align-items: center;
  height: 80px;
  padding: 16px 24px;
  background-color: var(--bg-secondary);
  border-bottom: 1px solid var(--border-primary);
  flex-shrink: 0;
  width: 100%;
  min-width: 0;
  box-sizing: border-box;
}

/* Garantir que o layout principal se adapte à sidebar */
.layout-with-sidebar {
  display: flex;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.layout-content {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
  width: 100%;
}

/* Garantir que o header se adapte corretamente */
.header-standard {
  display: flex;
  align-items: center;
  height: 80px;
  padding: 24px;
  background-color: var(--bg-secondary);
  border-bottom: 1px solid var(--border-primary);
  flex-shrink: 0;
  width: 100%;
  min-width: 0;
  box-sizing: border-box;
  position: relative;
}

/* === ESTILOS AVANÇADOS PARA REACT FLOW HANDLES === */

/* Base para todos os handles */
.react-flow__handle {
  width: 10px;
  height: 10px;
  background-color: var(--bg-secondary);
  border: 2px solid var(--primary-green);
  transition: all 0.2s ease;
}

/* Handles especializados - apenas borda colorida */
.react-flow__handle[id="dados"],
.react-flow__handle.connection-handle-dados {
  background-color: var(--bg-secondary) !important;
  border: 2px solid #4A90E2 !important;
}

.react-flow__handle[id="estrutura"],
.react-flow__handle.connection-handle-estrutura {
  background-color: var(--bg-secondary) !important;
  border: 2px solid #F5A623 !important;
}

/* Remove o estilo padrão do React Flow quando conectado */
.react-flow__handle.connecting, .react-flow__handle:hover {
  background-color: var(--primary-green-hover);
  border-color: var(--primary-green-hover);
  box-shadow: 0 0 0 4px var(--primary-green-transparent);
  transform: scale(1.4);
}

/* Posicionamento perfeito dos handles */
.react-flow__handle-top {
  top: 0;
  transform: translate(-50%, -50%);
}
.react-flow__handle-bottom {
  bottom: 0;
  transform: translate(-50%, 50%);
}
.react-flow__handle-left {
  left: 0;
  transform: translate(-50%, -50%);
}
.react-flow__handle-right {
  right: 0;
  transform: translate(50%, -50%);
}

/* Estilo da linha de conexão (edge) */
.react-flow__edge-path {
  stroke: rgba(255, 255, 255, 0.4);
  stroke-width: 2;
}

.react-flow__edge:hover .react-flow__edge-path,
.react-flow__edge-selected .react-flow__edge-path {
  stroke: var(--primary-green);
  stroke-width: 2;
}

/* Garantir que as edges mantenham sempre 2px de largura */
.react-flow__edge path {
  stroke-width: 2px !important;
}

.react-flow__edge:hover path {
  stroke-width: 2px !important;
}

/* Remover animações de hover dos handles */
.react-flow__handle {
  transition: none !important;
  transform: none !important;
}

.react-flow__handle:hover {
  transform: none !important;
  scale: none !important;
}

.react-flow__handle.connecting {
  transform: none !important;
  scale: none !important;
}

/* Sobrescrever estilos de hover específicos */
.connection-handle-dados:hover,
.connection-handle-estrutura:hover,
.connection-handle-source:hover {
  transform: none !important;
  scale: none !important;
  opacity: 1 !important;
  background-color: transparent !important;
  box-shadow: 0 0 0 4px rgba(245, 166, 35, 0.2) !important;
  cursor: default !important;
}

/* Corrigir cursor dos elementos nodrag */
.react-flow__node .nodrag,
.react-flow__node .nodrag * {
  cursor: default !important;
}

/* Garantir que as connection lines sejam sólidas */
.react-flow__connection-line {
  stroke-dasharray: none !important;
}

.react-flow__connection-line path {
  stroke-dasharray: none !important;
}

/* Sobrescrever qualquer stroke-dasharray nas connection lines */
.react-flow__connection-line * {
  stroke-dasharray: none !important;
}

/* Garantir que as connection lines customizadas sejam sólidas */
.react-flow__connection-line g path {
  stroke-dasharray: none !important;
}

/* Sobrescrever qualquer stroke-dasharray em elementos SVG das connection lines */
.react-flow__connection-line svg * {
  stroke-dasharray: none !important;
}

/* Garantir que as connection lines mantenham sempre 2px de largura */
.react-flow__connection-line path {
  stroke-width: 2px !important;
}

.react-flow__connection-line:hover path {
  stroke-width: 2px !important;
}

/* Sobrescrever especificamente o cursor text */
.react-flow__node .nodrag[style*="cursor: text"],
.react-flow__node .nodrag[style*="cursor:text"] {
  cursor: default !important;
}